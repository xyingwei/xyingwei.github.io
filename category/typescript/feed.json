{
    "version": "https://jsonfeed.org/version/1",
    "title": "徐爸爸是超人 • All posts by \"typescript\" category",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2020/12/30/fronted/TypeScript/interface/",
            "url": "http://example.com/2020/12/30/fronted/TypeScript/interface/",
            "title": "接口interface",
            "date_published": "2020-12-29T16:00:00.000Z",
            "content_html": "<h2 id=\"接口interface\"><a class=\"markdownIt-Anchor\" href=\"#接口interface\">#</a> 接口 interface</h2>\n<p><code>接口的作用就是为这些类型命名和为你的代码或第三方代码定义契约。</code></p>\n<h2 id=\"示例\"><a class=\"markdownIt-Anchor\" href=\"#示例\">#</a> 示例</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface LabelledValue &#123;</span><br><span class=\"line\">  label: string;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function printLabel(labelledObj:LabelledValue) &#123;</span><br><span class=\"line\">  console.log(labelledObj.label)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">et myObj &#x3D; &#123;size: 10, label: &quot;Size 10 Object&quot;&#125;;</span><br><span class=\"line\">printLabel(myObj);</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://example.com/2020/12/23/fronted/TypeScript/function/",
            "url": "http://example.com/2020/12/23/fronted/TypeScript/function/",
            "title": "函数Function",
            "date_published": "2020-12-22T16:00:00.000Z",
            "content_html": "<h2 id=\"一般函数\"><a class=\"markdownIt-Anchor\" href=\"#一般函数\">#</a> 一般函数</h2>\n<h3 id=\"语法\"><a class=\"markdownIt-Anchor\" href=\"#语法\">#</a> 语法</h3>\n<p><code>function 函数名(): 返回值类型&#123;&#125;</code> <br>\n<mark> 必须定义返回值 没有返回值 定义为 void</mark></p>\n<h3 id=\"示例\"><a class=\"markdownIt-Anchor\" href=\"#示例\">#</a> 示例</h3>\n<p><mark>形参和实参的类型和数量必须一致</mark></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function jumpSan(param1, parm2) &#123;</span><br><span class=\"line\">  console.log(&quot;\\u5144\\u5F1F\\u4EEC,\\u8DF3&quot; + params + &quot;,\\u897F\\u5317\\u65B9&quot; + parm2 + &quot;\\u7C73&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">jumpSan(&#39;P城&#39;, 100);</span><br></pre></td></tr></table></figure>\n<h2 id=\"可选参数的函数\"><a class=\"markdownIt-Anchor\" href=\"#可选参数的函数\">#</a> 可选参数的函数</h2>\n<h3 id=\"语法-2\"><a class=\"markdownIt-Anchor\" href=\"#语法-2\">#</a> 语法</h3>\n<ul>\n<li>function 函数名 (形参 1: 数据类型 = 默认值 1, 形参 2: 数据类型 = 默认值 2): 返回值类型 {}</li>\n<li>传参:\n<ul>\n<li>函数名 (参数 1)</li>\n<li>函数名 (参数 1, 参数 2)</li>\n<li>函数名 (undefined, 参数 2)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"示例-2\"><a class=\"markdownIt-Anchor\" href=\"#示例-2\">#</a> 示例</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function buyGuns(params, param2, cont) &#123;</span><br><span class=\"line\">  if (cont &#x3D;&#x3D;&#x3D; void 0) &#123; cont &#x3D; 0; &#125;</span><br><span class=\"line\">  console.log(&quot;\\u4E70&quot; + cont + &quot;\\u628A&quot; + params + &quot;,&quot; + param2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">buyGuns(&#39;ak47&#39;, &#39;m416&#39;, 10);</span><br></pre></td></tr></table></figure>\n<h2 id=\"参数数量不确定的函数\"><a class=\"markdownIt-Anchor\" href=\"#参数数量不确定的函数\">#</a> 参数数量不确定的函数</h2>\n<h3 id=\"语法-3\"><a class=\"markdownIt-Anchor\" href=\"#语法-3\">#</a> 语法</h3>\n<p>function 函数名 (形参 1: 类型，形参 2: 类型，… 形参 3: 类型 []):void {}<br>\n<mark> 特点：只能定义有一个 只能定义为数组 只能定义在形参最后</mark></p>\n<h3 id=\"示例-3\"><a class=\"markdownIt-Anchor\" href=\"#示例-3\">#</a> 示例</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function add(x, y) &#123;</span><br><span class=\"line\">    var resnumber &#x3D; [];</span><br><span class=\"line\">    for (var _i &#x3D; 2; _i &lt; arguments.length; _i++) &#123;</span><br><span class=\"line\">        resnumber[_i - 2] &#x3D; arguments[_i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &#x2F;&#x2F; 创建一个求和变量</span><br><span class=\"line\">    var sum &#x3D; x + y;</span><br><span class=\"line\">    &#x2F;&#x2F; 使用for of语法 循环剩余参数</span><br><span class=\"line\">    for (var _a &#x3D; 0, resnumber_1 &#x3D; resnumber; _a &lt; resnumber_1.length; _a++) &#123;</span><br><span class=\"line\">        var item &#x3D; resnumber_1[_a];</span><br><span class=\"line\">        sum +&#x3D; item;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    console.log(&#39;和&#x3D;&#x3D;&#x3D;&#39;, sum);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">add(1, 2);</span><br><span class=\"line\">add(1, 2, 3, 4, 5, 6, 7);</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://example.com/2020/12/22/fronted/TypeScript/enum/",
            "url": "http://example.com/2020/12/22/fronted/TypeScript/enum/",
            "title": "枚举Enum",
            "date_published": "2020-12-21T16:00:00.000Z",
            "content_html": "<h2 id=\"枚举-enum\"><a class=\"markdownIt-Anchor\" href=\"#枚举-enum\">#</a> 枚举 enum</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enum Gender &#123;</span><br><span class=\"line\">  Boy &#x3D; 1,</span><br><span class=\"line\">  Girl &#x3D; 2,</span><br><span class=\"line\">  Unknown &#x3D; 3,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">console.log(Gender.Boy)</span><br><span class=\"line\">console.log(Gender.Girl)</span><br><span class=\"line\">console.log(Gender.Unknown)</span><br><span class=\"line\"></span><br><span class=\"line\">let useSex: Gender &#x3D; Gender.Boy</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(useSex) &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://example.com/2020/12/22/fronted/TypeScript/ts-class/",
            "url": "http://example.com/2020/12/22/fronted/TypeScript/ts-class/",
            "title": "类Class",
            "date_published": "2020-12-21T16:00:00.000Z",
            "content_html": "<h2 id=\"class\"><a class=\"markdownIt-Anchor\" href=\"#class\">#</a> Class</h2>\n<ul>\n<li>封装</li>\n<li>继承</li>\n<li>多态</li>\n</ul>\n<h2 id=\"回顾以前创建对象方法\"><a class=\"markdownIt-Anchor\" href=\"#回顾以前创建对象方法\">#</a> 回顾以前创建对象方法</h2>\n<pre><code>构造函数 + new\n</code></pre>\n<h2 id=\"class创建对象\"><a class=\"markdownIt-Anchor\" href=\"#class创建对象\">#</a> Class 创建对象</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Animal &#123;</span><br><span class=\"line\">  name: string;</span><br><span class=\"line\">  constructor(theName: string) &#123; this.name &#x3D; theName; &#125;</span><br><span class=\"line\">  move(distanceInMeters: number &#x3D; 0) &#123;</span><br><span class=\"line\">    console.log(&#96;$&#123;this.name&#125; moved $&#123;distanceInMeters&#125;m.&#96;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"类的继承\"><a class=\"markdownIt-Anchor\" href=\"#类的继承\">#</a> 类的继承</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Snake extends Animal &#123;</span><br><span class=\"line\">  constructor(name: string) &#123; super(name); &#125;</span><br><span class=\"line\">  move(distanceInMeters &#x3D; 5) &#123;</span><br><span class=\"line\">    console.log(&quot;Slithering...&quot;);</span><br><span class=\"line\">    super.move(distanceInMeters);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Horse extends Animal &#123;</span><br><span class=\"line\">  constructor(name: string) &#123; super(name); &#125;</span><br><span class=\"line\">  move(distanceInMeters &#x3D; 45) &#123;</span><br><span class=\"line\">    console.log(&quot;Galloping...&quot;);</span><br><span class=\"line\">    super.move(distanceInMeters);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"实例化-调用\"><a class=\"markdownIt-Anchor\" href=\"#实例化-调用\">#</a> 实例化 调用</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let sam &#x3D; new Snake(&quot;Sammy the Python&quot;);</span><br><span class=\"line\">let tom: Animal &#x3D; new Horse(&quot;Tommy the Palomino&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">sam.move();</span><br><span class=\"line\">tom.move(34);</span><br></pre></td></tr></table></figure>\n<h2 id=\"code-practice\"><a class=\"markdownIt-Anchor\" href=\"#code-practice\">#</a> code practice</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class City &#123;</span><br><span class=\"line\">  cname:string;</span><br><span class=\"line\">  clevel:number;</span><br><span class=\"line\">  constructor(cname:string,clevel:number)&#123;</span><br><span class=\"line\">    this.cname &#x3D; cname;</span><br><span class=\"line\">    this.clevel &#x3D; clevel;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  about()&#123;</span><br><span class=\"line\">    console.log(&#96;欢迎来到$&#123;this.cname&#125;,危险系数为$&#123;this.clevel&#125;&#96;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 创建对象</span><br><span class=\"line\">let c1 &#x3D; new City(&#39;p城&#39;,5);</span><br><span class=\"line\">console.log(c1.cname);</span><br><span class=\"line\">c1.about();</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        }
    ]
}